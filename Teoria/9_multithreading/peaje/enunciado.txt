Una estación de peaje está representada por un proceso PEAJE con varios threads (uno por vía), y un proceso AUTOS.

Se utiliza cola de mensajes con lo siguiente:

MSG_NADIE                    0

MSG_AUTOS                   1

MSG_VIAS                       2 //Cada thread le suma uno a este define.



EVT_NINGUNO               0

EVT_VEHICULOS            1 // Siempre viene con la cantidad de vehículos a acolar.

EVT_FINALIZAR              2//Lo envía el proceso AUTOS para finalizar al proceso PEAJE.



Proceso PEAJE:

Recibe por parámetro la cantidad de vías.

El hilo principal (main):

Lanza tantos ThreadVia como vías se haya ingresado por parámetro.

Se queda esperando que terminen los threads.

Al finalizar los threads se debe sumar la cantidad de liberaciones de todas las vías, (recibir la cantidad de cada thread y sumar). Mostrar el total por pantalla.



ThreadVia (uno por vía):

Cada ThreadVia lleva una variable la cantidad_vehiculos_en_cola (inicializada en 0). Y realiza lo siguiente:
Espera recibir un mensaje MSG_VIA (+el número de vía)
Cada vez que recibe un EVT_VEHICULOS, suma la cantidad recibida a cantidad_vehiculos_en_cola
Descuenta de cantidad_vehiculos_en_cola (siempre que haya vehículos) N vehículos (N aleatorio de 1 a 10) de su cola de vehículos.
Si detecta que tiene más de 10 vehículos en cola debe liberar la vía poniendo la cantidad en 0, contando la cantidad de liberaciones.
Mostrar por pantalla la cantidad de vehículos que tiene en cola.


Proceso AUTOS:

Recibe por parámetro la cantidad de vías (igual que PEAJE) y la cantidad de vehículos a generar (por ejemplo 500 vehículos):

A continuación va generando vehículos en forma aleatoria de 1 a 5.
Selecciona una vía en forma aleatoria.
Utiliza el EVT_VEHICULOS para enviar el mensaje a la vía (MSG_VIA + nro vía) con la cantidad de vehículos a acolar (los del punto 1).
Se descuentan estos vehículos (los del punto 1) de los vehículos a generar.
Si se llegó a la cantidad de vehículos a generar, envía EVT_FINALIZA a todas las vías y TERMINA.
Si no, espera N ms (N aleatorio entre 100 y 500ms) y repite desde el punto 1.


Utilizar Makefile con la estructura de archivos vista en la cursada.